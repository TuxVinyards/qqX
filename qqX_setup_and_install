#!/usr/bin/env sh

#  Copyright (c)  Alex Genovese   https://github.com/TuxVinyards

#  THIS SCRIPT SHOULD BE RUN FROM INSIDE THE qqX DOWNLOAD/SOURCE FOLDER, where it will expect to find the right files 
#  OR  run the target script "./qqX_system_install"  from qqX.system folder directly

#  From version 1.10.03  a posix friendly .sh script is used as a wrapper, to make sure that it double click executes properly
#  in Qt / KDE XFCE etc desktop environments.  

#   IF: your file manager allows > double mouse click & 'run in terminal' or 'execute'

#   OR:  in the script's folder > right click > 'run as program' or 'run in konsole' or 'run in terminal'

#   OR:  in the script's folder > right click > open in terminal >  type "./qqX_setup_and_install"   (note prefix ./)

#   FOR ANY NEWER OR NON-STANDARD TERMINAL, SETTING UP A CUSTOM TERMINAL PROFILE IS RECOMMENDED
#   as this will cause the values to be stored for future updates.

#   CUSTOM terminal sizes & profile should be set just after the initial system checking lines
#   in the target script "./qqX_system_install" in the qqX.system folder. See notes in the target script.

#   shellcheck disable=SC2009,SC2034

#   Terminal name may also be set here, for one-time usage, if '-e' exec functions are recognised: 
    UserTerm=

printf "" > "/tmp/qqX.termlist"

if [ -n "$UserTerm" ]; then  printf "%s\n" "$UserTerm" > "/tmp/qqX.termlist"
fi

# https://stackoverflow.com/questions/35385962/arrays-in-a-posix-compliant-shell#59353917
# NB type -p is not supported in 'dash' so command -v needed 

# priority to main stream user bases and those offering geometry parameters
set -- "gnome-terminal" "konsole" "mate-terminal" "xfce4-terminal" "lxterminal" "roxterm" "uxterm" "xterm" 
set "$@" -- "qterminal" "alacritty" "kitty"

while [ -n "$1" ] ; do 
  if [ -n "$(command -v "$1")" ] ; then printf "%s\n" "$1" >> "/tmp/qqX.termlist"
  fi
  shift
done 

if [ -n "$(cat "/tmp/qqX.termlist")" ]; then UserTerm="$(head -n 1 "/tmp/qqX.termlist")"
fi

if [ -z "$UserTerm" ]; then TermGrep="$(pgrep -a term | grep qqX | tr -cd '[:print:]' | awk '{print $2}')"
  if [ -n "$TermGrep" ]; then UserTerm="$(basename "$TermGrep")"
  fi
fi

if [ "$UserTerm" = "gnome-terminal" ]; then
  "$UserTerm" --geometry 145x50 -- "./qqX.system/qqX_system_install"

elif [ "$UserTerm" = "konsole" ]; then
  "$UserTerm" --hide-menubar --hide-tabbar --notransparency -p TerminalColumns=145 -p TerminalRows=50  -e  "./qqX.system/qqX_system_install"

elif [ "$UserTerm" = "mate-terminal" ]; then
  "$UserTerm" --geometry=145x50 --hide-menubar -e "./qqX.system/qqX_system_install"

elif [ "$UserTerm" = "xfce4-terminal" ]; then
  "$UserTerm" --geometry=145x50 --hide-menubar --hide-toolbar  -e "./qqX.system/qqX_system_install"

elif [ "$UserTerm" = "lxterminal" ] || [ "$UserTerm" = "roxterm" ]; then
  "$UserTerm" --geometry=145x50 -e "./qqX.system/qqX_system_install"

elif [ "$UserTerm" = "uxterm" ] || [ "$UserTerm" = "xterm" ]; then
  "$UserTerm" -geometry 145x50 -fa truetype -fs 12 -fg white -bg black -e "./qqX.system/qqX_system_install"

elif [ "$UserTerm" = "kitty" ] ; then
  "$UserTerm"  "./qqX.system/qqX_system_install"

elif [ -n "$UserTerm" ]; then  
  # size params not available: "qterminal" "alacritty" etc 
  "$UserTerm" -e "./qqX.system/qqX_system_install"

elif [ -t 1 ] ; then  
  # Probably 97 to 100% chance of finding the matching desktop environment default terminal. 
  # If none found, where possible, if stdout is available, give help message.
  # https://stackoverflow.com/a/911213
  printf "\n\n    TERMINAL NAME not found  \n\n"
  # show the help notes at top of script
  grep -m 1 -A 10 'IF:' "$0"
  printf "\n\n    [enter] to exit \n\n    "
  read -r reply

fi

# Exit the script. But also check whether it has been run with a --hold optioned terminal, as Dolphin does, for example.
PidRun="$(ps -eF | grep sh | grep "$$" | grep "$0" | tr -cd '[:print:]' | awk '{print $3}')"

if [ -n "$PidRun" ]; then  kill "$PidRun" 
else exit
fi

# Licence  GPL3   https://www.gnu.org/licenses 

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# https://www.gnu.org/licenses  

# IF CODE IN GENERAL BECOMES USED IN ANY OTHER PROJECT,
# THE GPL3 LICENCE APPLIES & YOU SHOULD SHOW CLEAR ATTRIBUTIONS.

# But, that said, and without prejudice to the above, 
# SMALL CODE SNIPPETS, eg the function printColor, MAY BE USED PERMISSIVELY  
# in projects, as MIT or similar, providing CLEAR ATTRIBUTIONS are shown.

# qqX - quickemu quickget X terminal project  

# https://code.visualstudio.com/  (recommended)
# vim:tabstop=2:shiftwidth=2:expandtab