"use strict";(self.webpackChunkqq_x=self.webpackChunkqq_x||[]).push([[737],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var r=i(6540);const s={},d=r.createContext(s);function a(e){const n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(d.Provider,{value:n},e.children)}},8962:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Advanced/Custom-Machine-Types","title":"Custom-Machine-Types","description":"qqX CUSTOM BOOTING, including Arm, Risc-V and other machine & system types","source":"@site/docs/Advanced/Custom-Machine-Types.md","sourceDirName":"Advanced","slug":"/Advanced/Custom-Machine-Types","permalink":"/qqX/docs/Advanced/Custom-Machine-Types","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"title":"Custom-Machine-Types"},"sidebar":"advancedSidebar","previous":{"title":"Custom-Qemu-boot-parameters","permalink":"/qqX/docs/Advanced/Custom-Qemu-boot-parameters"},"next":{"title":"Development","permalink":"/qqX/docs/Advanced/Development"}}');var s=i(4848),d=i(8453);const a={sidebar_position:20,title:"Custom-Machine-Types"},t=void 0,o={},c=[{value:"qqX CUSTOM BOOTING, including Arm, Risc-V and other machine &amp; system types",id:"qqx-custom-booting-including-arm-risc-v-and-other-machine--system-types",level:2},{value:"Further Reading",id:"further-reading",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"qqx-custom-booting-including-arm-risc-v-and-other-machine--system-types",children:"qqX CUSTOM BOOTING, including Arm, Risc-V and other machine & system types"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"ADVANCED USERS"})})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Make sure that you have familiarized yourself with the standard Custom Boot procedure detailed on the other wiki page."})}),"\n",(0,s.jsx)(n.p,{children:"This section is probably more useful if your CPU is already Arm or Risc-V or other, and that you are already running a Linux distro on that."}),"\n",(0,s.jsx)(n.p,{children:"For users with X86, you should expect a slower performance as most of the CPU functions will have to be as software instead of as native pass-through."}),"\n",(0,s.jsx)(n.p,{children:"Below are examples of running on X86 and how to achieve them."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/TuxVinyards/qqX/assets/3956806/758ece76-94a9-4328-b32a-3f394d094dca",alt:"deb-arm-sdl-mate-cropped"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/TuxVinyards/qqX/assets/3956806/3ac3c3ca-96a4-4870-97b1-854664c23632",alt:"tumbleweed-run-cropped"})}),"\n",(0,s.jsxs)(n.p,{children:["The OpenSuse Risc-V was based on the pages and methods here ",(0,s.jsxs)(n.a,{href:"https://en.opensuse.org/openSUSE:RISC-V",children:["https://en.opensuse.org/openSUSE",":RISC-V"]})]}),"\n",(0,s.jsx)(n.p,{children:"Of note, the 'virt-copy-out' should be run as sudo."}),"\n",(0,s.jsx)(n.p,{children:"There is no need of the given ssh command as quickemu can generate a more sophisticated SDL one for you."}),"\n",(0,s.jsx)(n.p,{children:"These were the Custom Args:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"#  openSUSE TumbleWeed RiscV\n\n#  in qqX\n\n/usr/bin/qemu-system-riscv64\n\n  -name TumbleWeed,process=TumbleWeed\n  -pidfile TumbleWeed/TumbleWeed.pid\n\n  -machine virt,usb=on\n\n  -device usb-ehci,id=input\n  -device usb-kbd,bus=input.0\n  -device usb-mouse,bus=input.0\n  -m 4G\n\n  -device virtio-balloon\n  -vga none\n\n   -device virtio-vga,xres=1920,yres=1080\n   -display sdl,gl=on\n\n  -device virtio-rng-pci,rng=rng0\n  -object rng-random,id=rng0,filename=/dev/urandom\n\n  -rtc base=localtime,clock=host\n\n  -device qemu-xhci,id=spicepass\n  -chardev spicevmc,id=usbredirchardev1,name=usbredir\n\n  -device usb-redir,chardev=usbredirchardev1,id=usbredirdev1\n  -chardev spicevmc,id=usbredirchardev2,name=usbredir\n\n  -device usb-redir,chardev=usbredirchardev2,id=usbredirdev2\n  -chardev spicevmc,id=usbredirchardev3,name=usbredir\n\n  -device usb-redir,chardev=usbredirchardev3,id=usbredirdev3\n\n  -device pci-ohci,id=smartpass\n\n  -device usb-ccid\n  -chardev spicevmc,id=ccid,name=smartcard\n\n  -device ccid-card-passthru,chardev=ccid\n\n  -device virtio-blk-device,drive=SystemDisk\n\n  -drive file=TumbleWeed/disk.qcow2,format=qcow2,id=SystemDisk\n\n  -device virtio-net,netdev=nic\n\n   -device virtio-mouse\n\n  -netdev user,hostname=TumbleWeed,hostfwd=tcp::22220-:22,smb=/home/xxx/Public,id=nic\n\n  -fsdev local,id=fsdev0,path=/home/xxx/Public,security_model=mapped-xattr\n\n  -device virtio-9p-pci,fsdev=fsdev0,mount_tag=Public-xxx\n\n  -monitor unix:TumbleWeed/TumbleWeed-monitor.socket,server,nowait\n  -serial unix:TumbleWeed/TumbleWeed-serial.socket,server,nowait\n\n  -kernel TumbleWeed/boot/u-boot.bin\n"})}),"\n",(0,s.jsx)(n.p,{children:"The Risc-V is a more straight forward build than that for ARM / aarch64.  This may be due to the self contained boot but also to clear instructions from OpenSuse."}),"\n",(0,s.jsx)(n.p,{children:"Below are two methods for Arm64.  The Debian is easier and more runs much faster.  The fedora test remains only as proof-of-concept for now. If any Fedora/Arm enthusiasts manage to getting a reasonable running speed, then please share."}),"\n",(0,s.jsx)(n.p,{children:'All Arm distros will require the file "/usr/share/AAVMF/AAVMF_VARS.fd" to be copied to the VM folder.  qqX now has a util [rtv] that can be used to refresh these Tiano Variables is the boot sequence gets stuck.  The initial boot and install has to be carried out using Spice. When changing to the superior SDL you will need to run the VAR refresh routine.'}),"\n",(0,s.jsxs)(n.p,{children:["The Custom Script needs heavy modifying. Use TCG instead of KVM.  The main start point for guidance was here ",(0,s.jsx)(n.a,{href:"https://linaro.atlassian.net/wiki/spaces/QEMU/pages/29094969399/Setting+up+Debian+on+a+virtual+QEMU+Aarch64+machine",children:"https://linaro.atlassian.net/wiki/spaces/QEMU/pages/29094969399/Setting+up+Debian+on+a+virtual+QEMU+Aarch64+machine"})]}),"\n",(0,s.jsx)(n.p,{children:"The Debian script is currently as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"  # This file may be used as the basis for a qqX Custom Boot File\n\n  # qqX wil ignore any comments and blank lines:\n\n  # https://www.qemu.org/docs/master/system/target-arm.html\n\n  # https://github.com/qemu/qemu/blob/master/scripts/qmp/qmp-shell\n\n  /usr/bin/qemu-system-aarch64\n\n  -name debian-12,process=debian-12\n  -pidfile debian-12/debian-12.pid\n\n  #-enable-kvm\n\n  -accel tcg\n\n  #-machine q35,smm=off,vmport=off\n\n  # -machine virt\n\n  -machine type=virt,virtualization=on,pflash0=rom,pflash1=efivars\n\n  #-machine type=virt,virtualization=on\n\n  #cpu max,kvm=on\n\n  # -cpu max\n\n  -cpu max,pauth-impdef=on\n\n  #-cpu cortex-a53\n\n  -smp cores=4,threads=2,sockets=1\n\n  # -smp 8\n\n  -m 8G\n\n  #-object memory-backend-memfd,id=mem,size=8G,share=on\n\n  -device virtio-balloon\n  #-vga none\n\n  #-device virtio-vga,xres=2611,yres=1468\n\n  #-device virtio-gpu,xres=1920,yres=1080\n\n  -device virtio-gpu,xres=2611,yres=1468\n\n  -display sdl,gl=on\n\n  #-display spice-app,gl=on\n\n  # May be TOGGLED here, between SDL & Spice\n\n  #-display gtk,gl=on\n\n  #-audiodev pa,id=audio0\n\n  #-device intel-hda\n\n  #-device hda-duplex,audiodev=audio0\n\n  -rtc base=localtime,clock=host\n\n  -device virtio-rng-pci,rng=rng0\n  -object rng-random,id=rng0,filename=/dev/urandom\n\n  -device qemu-xhci,id=spicepass\n  -chardev spicevmc,id=usbredirchardev1,name=usbredir\n\n  -device usb-redir,chardev=usbredirchardev1,id=usbredirdev1\n  -chardev spicevmc,id=usbredirchardev2,name=usbredir\n\n  -device usb-redir,chardev=usbredirchardev2,id=usbredirdev2\n  -chardev spicevmc,id=usbredirchardev3,name=usbredir\n\n  -device usb-redir,chardev=usbredirchardev3,id=usbredirdev3\n\n  #-device pci-ohci,id=smartpass\n\n  #-device usb-ccid\n  #-chardev spicevmc,id=ccid,name=smartcard\n\n  -#device ccid-card-passthru,chardev=ccid\n\n  #-device usb-ehci,id=input\n\n  #-device usb-kbd,bus=input.0\n  #-k en-us\n\n  #-device usb-tablet,bus=input.0\n\n  -device usb-kbd\n\n  -device qemu-xhci\n\n  -device usb-mouse\n\n  -device virtio-net,netdev=nic\n\n  -netdev user,hostname=debian-12,hostfwd=tcp::22220-:22,smb=/home/xxx/Public,id=nic\n\n  #-global driver=cfi.pflash01,property=secure,value=on\n\n  # Caution OVMF needs replacing with AAVMF\n\n  # Needs adapting but see https://linaro.atlassian.net/wiki/spaces/QEMU/pages/29094969399/Setting+up+Debian+on+a+virtual+QEMU+Aarch64+machine\n\n  # blockdev can be more stable than -drive ?\n\n  #-drive if=pflash,format=raw,unit=0,file=/usr/share/AAVMF/AAVMF_CODE.fd,readonly=on\n  #-drive if=pflash,format=raw,unit=1,file=debian-12/AAVMF_VARS.fd\n\n  -blockdev node-name=rom,driver=file,filename=/usr/share/AAVMF/AAVMF_CODE.fd,read-only=true\n  -blockdev node-name=efivars,driver=file,filename=debian-12/AAVMF_VARS.fd\n\n  #-blockdev node-name=rom,driver=file,filename=(pwd)/pc-bios/edk2-aarch64-code.fd,read-only=true\n  #-blockdev node-name=efivars,driver=file,filename=$HOME/images/qemu-arm64-efivars\n\n  #-drive if=pflash,format=raw,unit=0,file=/usr/share/OVMF/OVMF_CODE.fd,readonly=on\n  #-drive if=pflash,format=raw,unit=1,file=debian-12/OVMF_VARS.fd\n\n  # https://wiki.ubuntu.com/UEFI/OVMF\n\n\n  -drive media=cdrom,index=0,file=debian-12/debian-12.4.0-arm64-DVD-1.iso\n\n  -device virtio-blk-pci,drive=SystemDisk\n\n  #-device virtio-scsi-pci,drive=SystemDisk\n\n  -drive id=SystemDisk,if=none,format=qcow2,file=debian-12/disk.qcow2\n\n  #-fsdev local,id=fsdev0,path=/home/xxx/Public,security_model=mapped-xattr\n\n  #-device virtio-9p-pci,fsdev=fsdev0,mount_tag=Public-xxx\n\n  -monitor unix:debian-12/debian-12-monitor.socket,server,nowait\n  -serial unix:debian-12/debian-12-serial.socket,server,nowait\n\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For your first boot and install, which is slow and CPU intensive, use qqX maximized at full screen.  The Spice display is ",(0,s.jsx)(n.em,{children:"transparent"})," and needs a plain dark background in order to view it.  The mouse is VERY difficult. If you can manage to get to the mouse controls this can help."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/TuxVinyards/qqX/assets/3956806/37c41bd9-961f-47dc-9dae-2bce1acefb12",alt:"debian-arm-spice-gl"})}),"\n",(0,s.jsx)(n.p,{children:"Do a basic install, close down and edit to SDL. Run [rtv].  Boot and select UEFI from the menu.  Select the Tiano device manager and create a raw 1000 ram disk which is key to getting SDL to work ..."}),"\n",(0,s.jsx)(n.p,{children:"SDL has a solid background and the mouse works. You may need to tweak the mouse speed a tad though."}),"\n",(0,s.jsx)(n.p,{children:"Similar process for Fedora but it is VERY hard on the system and VERY slow."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/TuxVinyards/qqX/assets/3956806/5c6716bb-01b7-4339-92d8-e102994aa1be",alt:"fedora-arm-bash"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/TuxVinyards/qqX/assets/3956806/02339af8-b63e-48d5-8304-646e967b39a7",alt:"fedora-arm-with-sdl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"  # This file may be used as the basis for a qqX Custom Boot File\n\n  # Comments and blank lines may be safely used & will be ignored.\n\n  /usr/bin/qemu-system-aarch64\n\n  -name fedora-39,process=fedora-39\n  -pidfile fedora-39/fedora-39.pid\n\n  -accel tcg\n\n\n  #-enable-kvm\n  #-machine q35,smm=off,vmport=off\n  #-cpu host,kvm=on\n\n  #-machine virt\n\n  -machine type=virt,virtualization=on,pflash0=rom,pflash1=efivars\n\n  -cpu max,pauth-impdef=on,sve=on,sme=on\n\n  #-cpu cortex-a57\n\n  #-cpu max\n\n  # https://github.com/qemu/qemu/blob/master/docs/system/arm/cpu-features.rst\n\n  -smp cores=4,threads=2,sockets=1\n  -m 12G\n\n  -device virtio-balloon\n  -vga none\n\n  #-device virtio-vga-gl,xres=2611,yres=1468\n\n  -device virtio-gpu-gl,xres=2611,yres=1468\n\n  -display sdl,gl=on\n\n  #-display spice-app,gl=on\n\n  -audiodev pa,id=audio0\n\n  -device intel-hda\n\n  -device hda-duplex,audiodev=audio0\n  -rtc base=localtime,clock=host\n\n  # ,driftfix=slew\n\n  -device virtio-rng-pci,rng=rng0\n  -object rng-random,id=rng0,filename=/dev/urandom\n\n  -device qemu-xhci,id=spicepass\n  -chardev spicevmc,id=usbredirchardev1,name=usbredir\n\n\n  -device usb-redir,chardev=usbredirchardev1,id=usbredirdev1\n  -chardev spicevmc,id=usbredirchardev2,name=usbredir\n\n  -device usb-redir,chardev=usbredirchardev2,id=usbredirdev2\n  -chardev spicevmc,id=usbredirchardev3,name=usbredir\n\n  -device usb-redir,chardev=usbredirchardev3,id=usbredirdev3\n\n  -device pci-ohci,id=smartpass\n\n  -device usb-ccid\n\n  #-chardev spicevmc,id=ccid,name=smartcard\n  #-device ccid-card-passthru,chardev=ccid\n\n  #-device usb-ehci,id=input\n\n  #-device usb-xhci,id=input\n\n  #-device usb-kbd,bus=input.0\n  #-k en-us\n\n  #-device usb-tablet,bus=input.0\n\n  -device qemu-xhci\n\n  -device usb-kbd\n\n  -device usb-mouse\n\n  -device virtio-net,netdev=nic\n  -netdev user,hostname=fedora-39,hostfwd=tcp::22220-:22,id=nic\n\n  #,smb=/home/xxx/Public,id=nic\n\n  -drive media=cdrom,index=0,file=fedora-39/Fedora-Workstation-Live-aarch64-39-1.5-respin.iso\n\n  -device virtio-blk-pci,drive=SystemDisk\n  -drive id=SystemDisk,if=none,format=qcow2,file=fedora-39/disk.qcow2\n\n  -blockdev node-name=rom,driver=file,filename=/usr/share/AAVMF/AAVMF_CODE.fd,read-only=true\n  -blockdev node-name=efivars,driver=file,filename=fedora-39/AAVMF_VARS.fd\n\n  #-fsdev local,id=fsdev0,path=/home/xxx/Public,security_model=mapped-xattr\n\n  #-device virtio-9p-pci,fsdev=fsdev0,mount_tag=Public-xxx\n\n  -monitor unix:fedora-39/fedora-39-monitor.socket,server,nowait\n  -serial unix:fedora-39/fedora-39-serial.socket,server,nowait\n\n  #-device virtio-blk-pci,drive=SharedDrive -drive id=SharedDrive,if=none,format=qcow2,file=/media/xxx/Files/VMQs/SharedDrive/shared.qcow2\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"The Fedora docs are bit sparse & some are very out-of-date.  They tend to focus on Red Hat Enterprise setup too, rather than generic desktop."}),"\n",(0,s.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,s.jsxs)(n.p,{children:["See: ",(0,s.jsx)(n.a,{href:"https://www.qemu.org/docs/master/about/emulation.html",children:"https://www.qemu.org/docs/master/about/emulation.html"}),"  and the notes on ABI's"]})]})}function m(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);