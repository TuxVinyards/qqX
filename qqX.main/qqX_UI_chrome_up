#!/usr/bin/env bash

##  qqX component to be located in folder 'qqX.main'

##  Copyright (c)  Alex Genovese   https://github.com/TuxVinyards

#   SMALL CODE SNIPPETS eg the function printColor MAY BE USED  
#   PERMISSIVELY in projects as MIT or similar, providing CLEAR ATTRIBUTIONS are shown.

# 	Otherwise:  

#   Licence  GPL3   https://www.gnu.org/licenses 

##  qqX - quickemu quickget X terminal project   

## ShellCheck global disables:

# https://www.shellcheck.net/wiki/SC2242 as it clashes with use of exit traps used to keep mouse click scripts open
# And SC1090,SC2024, SC154 for necessity of dynamic file sourcing

#  shellcheck disable=SC2242
#  shellcheck disable=SC1090 
#  shellcheck disable=SC2034
#  shellcheck disable=SC2154  


#  GENERAL COLOR & THEMING   (see settings)

[[ ! $X_Shade ]] &&  X_Shade="3"

#  Yellow 3 (recommended), Blue 4, Cyan 6 (brighter blue), Red 1
#  https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit
#  https://tldp.org/HOWTO/Bash-Prompt-HOWTO/x405.html
#  if source without declared shade, set default shade


# non-color ECHO TRAP, mainly designed to capture the technical output that quickemu doesn't send to log file
printf "\n"  > "/tmp/qqX_echo_output.log"

echo () { 

  if [[ $UseCustomBootArgs ]]; then
    command echo "$@" >>  "/tmp/qqX_echo_output.log" ; 
  else 
    command echo "$@" | tee -a  "/tmp/qqX_echo_output.log" ; 
  fi

}

printColor () {
	tput setaf "$X_Shade"
	# shellcheck disable=SC2059
	printf "$@"
	tput sgr0
}

# avoid use of echo near the vm boot section, to avoid clashes with the log file

echColor () {
	if [[ $2 ]] ; then
		if [[ "$1" == "-n" ]] ; then
			tput setaf "$X_Shade"
			echo -n "$2"
			tput sgr0
		else
			tput setaf "$X_Shade"
			echo "$@"          			
			tput sgr0
		fi
	else
		tput setaf "$X_Shade"
		echo "$1"
		tput sgr0
	fi
}


# General default title:
qqX_title="[quickemu quickget X terminal project] - $qqX_CurrentReleaseType: $qqX_Version "

## qqX chrome up  

qqX_logo() {
  # not for use during vm boot sequences
  echColor "  _    _   \/   "
  echColor " (_|  (_|  /\ "
  echColor "   |.   |.    "
}

qqX_logo_plain() {
  # early loader 
  echo "  _    _   \/   "
  echo " (_|  (_|  /\ "
  echo "   |.   |.    "
}

qqX_logo_printf() {
  # printf version (no end line feed)
  printColor "  _    _   \/   "
  printColor " (_|  (_|  /\ "
  printColor "   |.   |.    "
}

# Variant on   http://www.figlet.org/  -f mini  (-k)   (c)  Alex Genovese

qqX_logo_title() {
  # not for use during vm boot sequences
  if [[ $1 ]]; then qqX_LogoTxt="$1" ; else qqX_LogoTxt="$qqX_title" ; fi
  echColor "  _    _   \/   "
  echColor " (_|  (_|  /\ "
  echColor "   |.   |.     $qqX_LogoTxt"
}

qqX_logo_printf_title() {
  # printf version (no end line feed & also avoids the quickemu echo trap)
  if [[ $1 ]]; then qqX_LogoTxt="$1" ; else qqX_LogoTxt="$qqX_title" ; fi
  printColor "\n  _    _   \/   "
  printColor "\n (_|  (_|  /\ "
  printColor "\n   |.   |.     %s"  "$qqX_LogoTxt"
}


function exit {
  
  # trap to keep terminal open if started by mouse click  -t secs
  # or to stop sourced quickemu quitting as 'normal' procedure   (tput resets any hidden cursors)
  # https://unix.stackexchange.com/questions/220330/hide-and-unhide-cursor-with-tput

  if [[ $1 == "directly" ]]; then
    tput cnorm
    command exit

  elif [[ $1 ]] && [[ ! $NoExit ]]; then
    printf "\n\n"
    printColor "  ERROR : [Enter] to quit  or [h] to hold terminal open \n\n"
    read -rp  "  >  "  -t 30  ExitTrap
    [[ $ExitTrap == "h" ]] &&  printf "\n\n  Holding terminal open  [Enter] to quit  \n\n"  && read -rp "  >  "
    tput cnorm
    command exit "$@"

  fi

  # zero the optional 'exit 1' bypass flag (if it has been set)
  NoExit=
}


show_qqX_title_bar() {

  qqX_logo_printf_title  "$qqX_title" ;  printf "\n"
  printf "\n\n  Currently wrapping:  QEMU %s   quickemu %s  &  quickget %s" "$QEMU_VER_LONG"  "$QE_VerNumber"  "$QG_VerNumber"

  quickget filepath
  QE_FilePath_Short=
  QG_FilePath_Short=

  if [[ $QuickEmuSource != "$QE_FilePathDefault" ]] && [[ "$QuickEmuSource" != *'qqX.builtins'* ]] ; then
    if [[ "${#QuickEmuSource}" -gt 40 ]]; then QE_FilePath_Short=".... ${QuickEmuSource:(-35)}" ; else QE_FilePath_Short="$QuickEmuSource" ; fi
  fi

  if [[ "$(dirname "$QG_FilePath")" != "/usr/bin" ]] && [[ "$QG_FilePath" != *'qqX.builtins'* ]]; then
    if [[ "${#QG_FilePath}" -gt 40 ]]; then QG_FilePath_Short=".... ${QG_FilePath:(-35)}" ; else QG_FilePath_Short="$QG_FilePath" ; fi
  fi

  [[ $QE_FilePath_Short && $QG_FilePath_Short ]] && printf "\n\n  Custom Source:"
  [[ $QE_FilePath_Short ]] &&  printf "  %s"  "$QE_FilePath_Short"
  [[ $QG_FilePath_Short ]] &&  printf "  %s"  "$QG_FilePath_Short"

  [[ $VerboseArgs ]] && printf  "  (Verbose Args)"
  
  PWD_Folder="$(pwd)"

  HideFolderTitleBar=

  for TF in "${Extra_VM_Folder[@]}"; do

    [[ $TF ==  "$PWD_Folder" ]] || [[ $PWD_Folder ==  "$Default_VM_Folder" ]] &&  HideFolderTitleBar=1

  done

  if [[ ! $HideFolderTitleBar ]]; then  
    printf "\n\n  Default Folder: %s   Current Folder: %s \n"  "$Default_VM_Folder" "$(pwd)"
  else  
    printf "\n"
  fi

}

function show_qqX_general_help {

  HelpSelect=

  printf "\n\n  FOR HELP with settings and user modes, SEE NOTES IN THE GENERAL SETTINGS file"  
  printf "\n\n  Also see:  https://github.com/TuxVinyards/qqX/wiki/FAQs-and-Help  etc "
  printf "\n\n  For code contributions, bugs and updates, see: https://github.com/TuxVinyards/qqX"

  cat "$HOME/.qqX/icons/qqX.ascii.logo.8bit.25.txt"

  printf "\n  Translations:  https://github.com/TuxVinyards/qqX/wiki/Translation "
  printColor  "\n\n  [w] to OPEN qqX WIKI PAGES with browser    [c] qqX command line & mouse    [enter] to return"  
  printf "\n\n"
  read -rp "  >  "  HelpSelect

  if [[ $HelpSelect == "c" ]]; then   
  
    show_CLI_usage  
    printf "\n  [enter] to return \n\n"
    read -rp  "   >  " 

  elif [[ $HelpSelect == "w" ]]; then
  
     nohup &> /dev/null  "$WebBrowser"  "https://github.com/TuxVinyards/qqX/wiki/FAQs-and-Help"  & 

  fi
}

