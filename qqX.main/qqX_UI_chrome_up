#!/usr/bin/env bash

##  qqX component to be located in folder 'qqX.main'

##  Copyright (c)  Alex Genovese   https://github.com/TuxVinyards

#   SMALL CODE SNIPPETS eg the function printColor MAY BE USED  
#   PERMISSIVELY in projects as MIT or similar, providing CLEAR ATTRIBUTIONS are shown.

# 	Otherwise:  

#   Licence  GPL3   https://www.gnu.org/licenses 

##  qqX - quickemu quickget X terminal project   

## ShellCheck global disables:

# https://www.shellcheck.net/wiki/SC2242 as it clashes with use of exit traps used to keep mouse click scripts open
# And SC1090,SC2024, SC154 for necessity of dynamic file sourcing

#  shellcheck disable=SC2242
#  shellcheck disable=SC1090 
#  shellcheck disable=SC2034
#  shellcheck disable=SC2154  


#  GENERAL COLOR & THEMING   (see settings)

[[ ! $X_Shade ]] &&  X_Shade="3"

#  Yellow 3 (recommended), Blue 4, Cyan 6 (brighter blue), Red 1

#  https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit

#  https://tldp.org/HOWTO/Bash-Prompt-HOWTO/x405.html

#  if source without declared shade, set default shade

[[ ! $X_Shade ]]  && X_Shade=3


echColor () {

	# for X_Shade see qqX configs

  # deprecated > use printColor 

	if [[ $2 ]] ; then

		if [[ "$1" == "-n" ]] ; then
			tput setaf "$X_Shade"
			echo -n "$2"
			tput sgr0
		else
			tput setaf "$X_Shade"
			echo "$@"          			
			tput sgr0
		fi

	else
		tput setaf "$X_Shade"
		echo "$1"
		tput sgr0
	fi

}


# non-color echo trap, mainly designed to capture the technical output that quickemu doesn't send to log file

printf "\n"  > "/tmp/qqX_echo_output.log"

#

echo () { command echo "$@" | tee -a  "/tmp/qqX_echo_output.log" ; }



printColor () {

	tput setaf "$X_Shade"

	# shellcheck disable=SC2059

	printf "$@"

	tput sgr0

}



## General default title:

qqX_title="[quickemu quickget X terminal project] - $qqX_CurrentReleaseType: $ModVersion "


## qqX chrome up  ( runs if ModName == qqX [or qqx] )


function_qqX_logo() {
  
  # deprecated

  echColor "  _    _   \/   "
  echColor " (_|  (_|  /\ "
  echColor "   |.   |.    "
}


function_qqX_printf_logo() {

  # printf version (no end line feed)

  printColor "  _    _   \/   "
  printColor " (_|  (_|  /\ "
  printColor "   |.   |.    "
}


# Variant on   http://www.figlet.org/  -f mini  (-k)   (c)  Alex Genovese


function_qqX_logo_title() {

  # deprecated

  if [[ $1 ]]; then

    qqX_LogoTxt="$1"

  else

    qqX_LogoTxt="$qqX_title"

  fi

  echColor "  _    _   \/   "
  echColor " (_|  (_|  /\ "
  echColor "   |.   |.     $qqX_LogoTxt"

}

function_qqX_printf_logo_title() {

  # printf version (no end line feed & also avoids the quickemu echo trap)

  if [[ $1 ]]; then

    qqX_LogoTxt="$1"

  else

    qqX_LogoTxt="$qqX_title"

  fi

  printColor "\n  _    _   \/   "
  printColor "\n (_|  (_|  /\ "
  printColor "\n   |.   |.     %s"  "$qqX_LogoTxt"

}


show_wrap_CLI_usage () {

  printColor  "\n  Command line Usage %s:  \n\n"    "$ModName"

  printf     "  Either plain %s  or  with parameters  --vm  [path/to/vms-folder/]vm-name.conf   " "$ModName"    

  printf     "\n\n  Scripts not located in /usr/bin should be in the VMs folder or a path should be supplied. "

  printf     "\n\n  Start non /usr/bin with './' eg:  ./%s "  "$ModName" 

  printf     "\n\n  Or by clicking on an edited .conf file:"

  printf     "\n\n  Edit the first line of the .conf to point to %s instead of quickemu"  "$ModName" 

  printf     "\n\n  eg. #!/usr/bin/quickemu --vm  becomes  #!/usr/bin/%s --vm  or similar (VM name not needed)" "$ModName" 

  printf     "\n\n  For more complex CLI usage, try the alternative 'q-mod' script or quickemu itself."
  
  printf     "\n\n  @ 2023/08 qqX will now issue short version numbers on 'qqX --version' "

  #printf     "\n\n"

}


function exit {

  # trap to keep terminal open if started by mouse click  -t secs

  # or to stop sourced quickemu quitting as 'normal' procedure   (tput resets any hidden cursors)

  if [[ $1 == "directly" ]]; then

    tput cnorm

    command exit

  elif [[ $1 ]] && [[ ! $NoExit ]]; then

    printf "\n\n"

    printColor "  ERROR : [Enter] to quit  or [h] to hold terminal open \n\n"
  
    read -rp  "  >  "  -t 30  ExitTrap

    [[ $ExitTrap == "h" ]] &&  printf "\n\n  Holding terminal open  [Enter] to quit  \n\n"  && read -rp "  >  "

    tput cnorm

    # https://unix.stackexchange.com/questions/220330/hide-and-unhide-cursor-with-tput

    command exit "$@"

  fi

  # zero the optional 'exit 1' bypass flag (if it has been set)

  NoExit=

}



show_qmod_title() {

  if [[ $ModName_qqX ]]; then printf "\n" ; function_qqX_printf_logo_title  "$qqX_title" ;  printf "\n"

  else printColor "\n\n  Quickemu Mod - Virtual Machine Launcher  Wrap Version %s"  "$ModVersion" ; fi

  printf "\n\n  Currently wrapping:  QEMU %s   quickemu %s  &  quickget %s" "$QEMU_VER_LONG"  "$QE_VerNumber"  "$QG_VerNumber"

  quickget filepath

  QE_FilePath_Short=
  QG_FilePath_Short=

  if [[ $QuickEmuSource != "$QE_FilePathDefault" ]]; then

    if [[ "${#QuickEmuSource}" -gt 40 ]]; then QE_FilePath_Short=".... ${QuickEmuSource:(-35)}" ; else QE_FilePath_Short="$QuickEmuSource" ; fi

  fi

  if [[ "$(dirname "$QG_FilePath")" != "/usr/bin" ]]; then

    if [[ "${#QG_FilePath}" -gt 40 ]]; then QG_FilePath_Short=".... ${QG_FilePath:(-35)}" ; else QG_FilePath_Short="$QG_FilePath" ; fi

  fi

  [[ $QE_FilePath_Short && $QG_FilePath_Short ]] && printf "\n\n  Custom Source:"

  [[ $QE_FilePath_Short ]] &&  printf "  %s"  "$QE_FilePath_Short"

  [[ $QG_FilePath_Short ]] &&  printf "  %s"  "$QG_FilePath_Short"


  [[ $VerboseArgs ]] && printf  "  (Verbose Args)"
  
  PWD_Folder="$(pwd)"

  HideFolderTitleBar=

  for TF in "${Extra_VM_Folder[@]}"; do

    [[ $TF ==  "$PWD_Folder" ]] || [[ $PWD_Folder ==  "$Default_VM_Folder" ]] &&  HideFolderTitleBar=1

  done

  if [[ ! $HideFolderTitleBar ]]; then  
  
    printf "\n\n  Default Folder: %s   Current Folder: %s \n"  "$Default_VM_Folder" "$(pwd)"

  else

    printf "\n"

  fi

}

function show_quickemu_WRAP_help {

  HelpSelect=

  [[ ! $ModName_qqX ]] && printColor "\n\n  Quickemu Mod - Virtual Machine Launcher - Wrap Version %s %s " "$ModName" "$ModVersion" 

  printf "\n\n  FOR HELP with settings and user modes, SEE NOTES IN THE GENERAL SETTINGS file"  

  printf "\n\n  For code contributions, bugs and updates, see: https://github.com/TuxVinyards"  

  [[ ! $ModName_qqX ]] &&  printf "\n\n  May be started in a folder terminal:  ./%s   or by mouse click"  "$ModName"
  
  printf "\n\n\n  [enter] to return   [a] %s API detail   " "$ModName"

  [[ ! $ModName_qqX ]] && printf "[p] parameters for VM runtime settings"

  printf "\n\n"

  read -rp "  >  "  HelpSelect

  if [[ $HelpSelect == "a" ]]; then   
  
    show_wrap_CLI_usage  

    printf "\n\n\n"
  
    read -rp  "  [enter] to return >  " 

  elif [[ $HelpSelect == "p" ]]; then
  
    printf "\n\n  Extra quickemu parameters for qmod API & qmod settings."  
  
    printf "\n\n  NB  not all options can be applicable  CAUTION \n\n" 

    NoExit=1
    echo
    usage | tail +6
    echo

    read -rp  "  [enter] to return >  " 

  fi
}

